# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  email: String!
  firstName: String!
  lastName: String!
  phoneNumber: String!
  address: String
  roles: [String!]!
  createdAt: Date!
  updatedAt: Date!
}

"""Date custom scalar type"""
scalar Date

type AuthData {
  user: User!
  token: String!
}

type CheckStatus {
  Check_Status: String!
}

type Food {
  id: Float!
  name: String!
  category: String!
  price: Float!
  isAvailable: Boolean!
  rate: Float!
  rateCount: Float!
  createdAt: Date!
  updatedAt: Date!
}

type UpdateResult {
  affected: Int!
  raw: String!
}

type Restaurant {
  id: Float!
  name: String!
  address: String!
  category: String!
  ownerId: String!
  foods: [Food]!
  rate: Float!
  rateCount: Float!
  createdAt: Date!
  updatedAt: Date!
}

type CartFood {
  id: Int!
  cartId: Int!
  count: Int!
  food: Food!
  createdAt: Date!
  updatedAt: Date!
}

type Cart {
  id: Int!
  userId: String!
  CartFood: [CartFood]!
  totalPrice: Float!
  createdAt: Date!
  updatedAt: Date!
}

type Query {
  checkAuthClientStatus: CheckStatus!
  getRestaurantList(name: String, category: String): [Restaurant!]!
  getRestaurantById(id: Int!): Restaurant!
  getFoodById(id: Int!): Food!
  getFoodList(name: String, category: String, isAvailable: Boolean, restaurantId: Int): [Food!]!
  getUserCart: Cart!
}

type Mutation {
  signUp(createUserData: CreateUserInput!): AuthData!
  login(loginData: LoginInput!): AuthData!
  makeUserAdmin(id: String!): User!
  updateUser(updateUserData: UpdateUserInput!): User!
  createRestaurant(createRestaurantData: CreateRestaurantInput!): Restaurant!
  updateResaurant(updateRestaurantData: UpdateRestaurantInput!, id: Int!): UpdateResult!
  deleteRestaurant(id: Int!): Restaurant!
  rateRestaurant(rateData: RateRestaurantInput!): UpdateResult!
  createFood(createFoodData: CreateFoodInput!): Food!
  updateFood(updateFoodData: UpdateFoodInput!, id: Int!): UpdateResult!
  deleteFood(id: Int!): UpdateResult!
  rateFood(rateData: RateFoodInput!): UpdateResult!
  deleteCart: Cart!
  addOrUpdateCartFood(addOrUpdateFoodInCartData: AddOrUpdateFoodInCartInput!): CartFood!
  deleteFoodFromCart(deleteFoodFromCartData: DeleteFoodFromCartInput!): CartFood!
}

input CreateUserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  phoneNumber: String!
}

input LoginInput {
  email: String!
  password: String!
}

input UpdateUserInput {
  email: String
  firstName: String
  lastName: String
  phoneNumber: String
  address: String
}

input CreateRestaurantInput {
  name: String!
  address: String!
  category: String!
}

input UpdateRestaurantInput {
  name: String
  address: String
  category: String
}

input RateRestaurantInput {
  rateNumber: Int!
  restaurantId: Int!
}

input CreateFoodInput {
  name: String!
  category: String!
  price: Int!
  restaurantId: Int!
}

input UpdateFoodInput {
  name: String
  category: String
  price: Int
  isAvailable: Boolean
}

input RateFoodInput {
  rateNumber: Int!
  foodId: Int!
}

input AddOrUpdateFoodInCartInput {
  cartId: Float!
  foodId: Float!
  count: Float!
}

input DeleteFoodFromCartInput {
  cartId: Float!
  cartFoodId: Float!
}